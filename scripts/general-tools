#!/bin/bash
# List of general commands - to be loaded on shell start

# Detailed ls command
alias ls="ls -la --color"

# Launch VS Code with scale factor forced
alias code="code --force-device-scaled-factor=1.2"

# Syncs .zshrc to reload the utility scripts available
alias sync="source ~/.zshrc"

# Clears contents of a folder
alias clear-folder="rm -rf ./*"

alias bkup="~/IdeaProjects/backtup/build/install/backtup/bin/backtup"

alias project-screen="intel-virtual-output"

alias sysupdate="yay -Syyu"

alias open="ranger"

function search {
  path=$1
  pattern=$2
  grep -rnw $path -e $pattern
}

# Use pandoc to convert all Markdown files in a folder to org files
function md-to-org {
  for f in ./*.md; do
    local name=$(basename $f .md)
    pandoc -f markdown -t org -o $name.org ${f}
  done
}

# Create a new directory and cd into it
function newdir {
  mkdir $1
  cd $1
}

# Backup a list of files to an external drive or another folder
# Reads list of files to backup from ~/.backup-list
# TODO: Check if target drive has enough space or not
function backup {
  local destination_folder="$1"
  if [[ -z $destination_folder ]]; then
    echo "Provide a destination folder to backup files to"
    return 1
  elif [[ ! -d $destination_folder ]]; then
    echo "Provide a valid destination folder path"
    return 1
  fi

  local home_path=$(echo ~)
  local backup_file_path="$home_path/.backup-list"
  local backups=()

  set -f
  IFS='\n'
  while read file; do
    local modification=$(echo "$file" | sed -r "s;~;$home_path;g")
    backups+=($modification)
  done < $backup_file_path

  for file in $backups; do
    if [[ ! -e "$file" ]]; then
      echo "$file does not exist in local file system"
      set +f
      unset IFS
      return 1
    fi
  done

  local timestamp=$(date "+%d-%b-%Y_%H-%M")
  local backup_folder="$destination_folder/$timestamp"
  sudo mkdir $backup_folder

  for file in $backups; do
    sudo rsync -avPR --exclude=".git" --exclude="venv" --exclude="node_modules" $file $backup_folder
  done

  set +f
  unset IFS
}

# Sync all dotfiles
function dsync {
  cp ~/.spacemacs ~/dotfiles/emacs/.spacemacs
  cp ~/.zshrc ~/dotfiles/.zshrc
  cp ~/.ideavimrc ~/dotfiles/.ideavimrc

  cp -r ~/snippets ~/dotfiles/
}
